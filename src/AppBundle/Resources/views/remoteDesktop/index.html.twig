{% extends '::base.html.twig' %}

{% block stylesheets %}

    {{ parent() }}

    <style>
        main {
            background-color: #fff;
        }
        h1, h2, h3, h4, h5, h6 {
            color: #000;
        }
    </style>

{% endblock %}

{% set clientDownloadButtonsAlreadyShown = false %}
{% set clientDownloadUriWin = 'http://www.scalablegraphics.com/software/cgx-1-10-0/client/win32/cgxClient-Scalable%20Graphics-CGX%20Portal.1.10.0.7.exe' %}
{% set clientDownloadUriMac = 'http://www.scalablegraphics.com/software/cgx-1-10-0/client/osx/CGX_1.10.0.17.dmg' %}

{% block body %}
    <div class="container">
        <div class="row">
            <div class="col-xs-12">

                {% if currentAccountBalance < 0.0 %}
                    <div class="alert alert-danger accountbalanceinfobox" role="alert">
                        <strong>{{ "remoteDesktop.index.negative_account_balance"|trans }}</strong>
                        {{ "remoteDesktop.index.your_current_account_balance_is"|trans }} <strong>{{ currentAccountBalance|localizedcurrency('USD') }}</strong>.

                {% elseif currentAccountBalance < 5.0 %}
                    <div class="alert alert-warning accountbalanceinfobox" role="alert">
                        {{ "remoteDesktop.index.your_current_account_balance_is_only"|trans }} <strong>{{ currentAccountBalance|localizedcurrency('USD') }}</strong>.

                {% elseif currentAccountBalance == 0.0 %}
                    <div class="alert alert-warning accountbalanceinfobox" role="alert">
                        {{ "remoteDesktop.index.your_current_account_balance_is"|trans }} <strong>{{ currentAccountBalance|localizedcurrency('USD') }}</strong>.

                {% else %}
                    <div class="alert alert-success accountbalanceinfobox" role="alert">
                        {{ "remoteDesktop.index.your_current_account_balance_is"|trans }} <strong>{{ currentAccountBalance|localizedcurrency('USD') }}</strong>.

                {% endif %}

                    <hr>

                    <a
                        class="accountbalancehistorylink pull-right"
                        href="{{ path('accountmovements.index') }}"
                    >{{ "remoteDesktop.index.see_account_balance_history"|trans }}</a>

                    <a
                        class="btn btn-default btn-sm"
                        href="{{ path('accountmovements.new') }}"
                    >{{ "remoteDesktop.index.click_here_to_increase_your_balance"|trans }}</a>
                </div>


                <h1>{{ "remoteDesktop.index.headline"|trans }}</h1>

                {% if remoteDesktops %}

                        <script>
                            var resolutionFunctions = [];
                            var checkStatusFunctions = [];
                            var lowerCountdownFunctions = [];
                        </script>

                    {% for remoteDesktop in remoteDesktops %}

                        {% if remoteDesktop.status is not constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_TERMINATED') %}

                            <a name="{{ remoteDesktop.id }}"></a>

                            <div class="panel panel-default remotedesktop-panel">
                                <div class="panel-heading">
                                    <h2 class="panel-title">
                                        <span class="glyphicon glyphicon-blackboard" aria-hidden="true"></span>
                                        {{ remoteDesktop.title }}
                                    </h2>

                                    <div class="remotedesktop-infobox">
                                        {% if remoteDesktop.status is not constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_NEVER_LAUNCHED') %}
                                            <span class="label label-default">{{ remoteDesktop.getRegionOfActiveCloudInstance.humanName|trans }}</span>
                                            &nbsp;
                                        {% endif %}
                                        <span class="label label-default">{{ remoteDesktop.kind|trans }}</span>
                                        &nbsp;
                                        <span class="label label-default">{{ remoteDesktop.kind.flavor.humanName|trans }}</span>
                                        &nbsp;
                                    </div>

                                </div>

                                <div class="panel-body">

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_NEVER_LAUNCHED') %}
                                        <h3>
                                            <span class="label label-default remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.never_launched"|trans }}</span>
                                        </h3>
                                    {% else %}
                                        {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_READY_TO_USE') %}
                                            <div class="well well-sm pull-right hourlyusagecostsbox">
                                                <small>
                                                    {{ "remoteDesktop.index.current_costs_per_hour"|trans }}
                                                    ({{ "remoteDesktop.index.while_in_status"|trans }} <strong>{{ "remoteDesktop.status.ready_to_use"|trans }}</strong>): {{ remoteDesktop.hourlyUsageCosts|localizedcurrency('USD') }}
                                                </small>
                                            </div>
                                        {% else %}
                                            <div class="well well-sm pull-right hourlyusagecostsbox">
                                                <small>
                                                    {{ "remoteDesktop.index.costs_per_hour"|trans }}
                                                    ({{ "remoteDesktop.index.only_in_status"|trans }} <strong>{{ "remoteDesktop.status.ready_to_use"|trans }}</strong>): {{ remoteDesktop.hourlyUsageCosts|localizedcurrency('USD') }}
                                                </small>
                                            </div>
                                        {% endif %}
                                        <hr>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_BOOTING') %}
                                        <h3>
                                            <span class="label label-success label-pulsating remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.booting"|trans }}</span>
                                        </h3>

                                        <label id="countdownbox-{{ remoteDesktop.id }}" class="label label-default">
                                            {{ "remoteDesktop.index.countdownbox.checking_again_in"|trans }} <span id="countdownvalue-{{ remoteDesktop.id }}">30</span>...
                                        </label>

                                        <label id="notyetavailablebox-{{ remoteDesktop.id }}" class="label label-default" style="display: none; margin-left: 8px;">
                                            {{ "remoteDesktop.index.countdownbox.not_yet_available"|trans }}
                                        </label>

                                        <a id="nowavailablebox-{{ remoteDesktop.id }}"
                                           href="{{ path('remotedesktops.index') }}?{{ random() }}#{{ remoteDesktop.id }}"
                                           class="btn btn-default" style="display: none;"
                                        >
                                            <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.countdownbox.now_available"|trans }}
                                        </a>

                                        <script>
                                            checkStatusFunctions['{{ remoteDesktop.id }}'] = function () {
                                                jQuery.getJSON('{{ path('remotedesktops.status', {'remoteDesktop': remoteDesktop.id}) }}', null, function (status) {
                                                    if (status == {{ constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_READY_TO_USE') }}) {
                                                        jQuery('#countdownbox-{{ remoteDesktop.id }}').hide();
                                                        jQuery('#nowavailablebox-{{ remoteDesktop.id }}').fadeIn(200);
                                                    } else {
                                                        jQuery('#countdownvalue-{{ remoteDesktop.id }}').html(30);
                                                        jQuery('#notyetavailablebox-{{ remoteDesktop.id }}').fadeIn(200);
                                                        jQuery('#notyetavailablebox-{{ remoteDesktop.id }}').fadeOut(6000);
                                                        lowerCountdownFunctions['{{ remoteDesktop.id }}']();
                                                    }
                                                });
                                            };

                                            lowerCountdownFunctions['{{ remoteDesktop.id }}'] = function () {
                                                var current = parseInt(jQuery('#countdownvalue-{{ remoteDesktop.id }}').text());
                                                var updated = 0;
                                                if (current > 0) {
                                                    updated = current - 1;
                                                    jQuery('#countdownvalue-{{ remoteDesktop.id }}').html(updated);
                                                    window.setTimeout(lowerCountdownFunctions['{{ remoteDesktop.id }}'], 1000);
                                                } else {
                                                    checkStatusFunctions['{{ remoteDesktop.id }}']();
                                                }
                                            };

                                            jQuery('document').ready(function () {
                                                lowerCountdownFunctions['{{ remoteDesktop.id }}']();
                                            });
                                        </script>

                                        <hr>

                                        <div class="alert alert-info small" role="alert">
                                            <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.info_launching"|trans }}
                                        </div>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_READY_TO_USE') %}
                                        <h3>
                                            <span class="label label-success remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.ready_to_use"|trans }}</span>
                                        </h3>

                                        <ul class="list-group">

                                            <li class="list-group-item">

                                                <script>
                                                    resolutionFunctions['{{ remoteDesktop.id }}'] = function(width, height) {
                                                        jQuery('#launch-link-{{ remoteDesktop.id }}')
                                                            .attr('href', 'sgxportal://{{ launcherHostname }}/en/remoteDesktops/{{ remoteDesktop.id }}/{{ remoteDesktop.idHash }}/' + width + '/' + height + '?protocol={{ launcherProtocol }}&version=1_10_0#{{ remoteDesktop.id }}');
                                                    }
                                                </script>

                                                <p>
                                                    {{ "remoteDesktop.index.choose_resolution"|trans }}
                                                </p>
                                                <div class="well well-sm resolutionsbox">
                                                    {% set resolutions = [['1024','768'],
                                                                          ['1280','720'],
                                                                          ['1280','800'],
                                                                          ['1536','1152'],
                                                                          ['1920','1080'],
                                                                          ['1920','1200'],
                                                                          ['2048','1536'],
                                                                          ['2560','1440']]
                                                    %}
                                                    <table class="table table-condensed resolutions-table">
                                                        <thead>
                                                            <tr>
                                                                {% for resolution in resolutions %}
                                                                    <td class="text-center">
                                                                        <input
                                                                            type="radio"
                                                                            class="resolution-radio"
                                                                            name="resolution-{{ remoteDesktop.id }}"
                                                                            id="resolution-{{ remoteDesktop.id }}-{{ resolution[0] }}x{{ resolution[1] }}"
                                                                            onclick="resolutionFunctions['{{ remoteDesktop.id }}']({{ resolution[0] }}, {{ resolution[1] }})"
                                                                            {% if loop.index0 == 2 %}checked{% endif %}
                                                                        >
                                                                        <label class="small resolution-label" for="resolution-{{ remoteDesktop.id }}-{{ resolution[0] }}x{{ resolution[1] }}">
                                                                            {{ resolution[0] }}<br>x{{ resolution[1] }}
                                                                        </label>
                                                                    </td>
                                                                {% endfor %}
                                                            </tr>
                                                        </thead>
                                                    </table>

                                                </div>

                                                <a id="launch-link-{{ remoteDesktop.id }}" href="sgxportal://{{ launcherHostname }}/en/remoteDesktops/{{ remoteDesktop.id }}/{{ remoteDesktop.idHash }}/1280/800?protocol={{ launcherProtocol }}&version=1_10_0#{{ remoteDesktop.id }}"
                                                   type="button"
                                                   class="btn btn-success btn-sm"
                                                >
                                                    <span class="glyphicon glyphicon-new-window" aria-hidden="true"></span>
                                                    {{ "remoteDesktop.index.connect_now"|trans }}
                                                </a>
                                                &nbsp;
                                                <span class="label label-default clientinfolabel" title="{{ remoteDesktop.publicAddress }} | {{ remoteDesktop.adminPassword }}">{{ "remoteDesktop.index.connect_now_client_info"|trans }}</span>
                                            </li>

                                            <li class="list-group-item">
                                                <a href="{{ clientDownloadUriWin }}"
                                                   type="button"
                                                   class="btn btn-default btn-sm"
                                                >
                                                    <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>
                                                    {{ "remoteDesktop.index.download_client_windows"|trans }}
                                                </a>

                                                <a href="{{ clientDownloadUriMac }}"
                                                   type="button"
                                                   class="btn btn-default btn-sm"
                                                >
                                                    <span class="glyphicon glyphicon-apple" aria-hidden="true"></span>
                                                    {{ "remoteDesktop.index.download_client_mac"|trans }}
                                                </a>
                                                {% set clientDownloadButtonsAlreadyShown = true %}
                                            </li>

                                        </ul>

                                        <hr>
                                        <div class="costprotectionblock">
                                            {% if remoteDesktop.scheduledForStopAt != null %}
                                                <p>
                                                    <strong>
                                                        {{ "remoteDesktop.index.auto_stop_info"|trans }}

                                                        {% if app.request.cookies.has('ubiqmachine_timezone') %}
                                                            {{ remoteDesktop.scheduledForStopAt|date('F j, Y H:i:s', app.request.cookies.get('ubiqmachine_timezone')) }}
                                                            ({{ app.request.cookies.get('ubiqmachine_timezone') }}).
                                                        {% else %}
                                                            {{ remoteDesktop.scheduledForStopAt|date('F j, Y H:i:s', 'UTC') }} (UTC)
                                                        {% endif %}
                                                    </strong>
                                                </p>
                                            {% endif %}

                                            <p>
                                                {{ "remoteDesktop.index.auto_stop_change_first"|trans }}
                                                {% for usageHour,optimalHourlyAutostopTime in remoteDesktop.optimalHourlyAutostopTimes %}
                                                    <a
                                                        class="btn btn-sm btn-default"
                                                        href="{{ path('remotedesktops.scheduleForStopAtEndOfUsageHour', {'remoteDesktop': remoteDesktop.id, 'usageHour': usageHour}) }}"
                                                        title="{{ "remoteDesktop.index.auto_stop_change_btn_title"|trans }}{% if app.request.cookies.has('ubiqmachine_timezone') %}{{ optimalHourlyAutostopTime|date('F j, Y H:i:s', app.request.cookies.get('ubiqmachine_timezone')) }}{% else %}{{ optimalHourlyAutostopTime|date('F j, Y H:i:s', 'UTC') }} (UTC){% endif %}.">
                                                        {{ ("remoteDesktop.index.auto_stop_change_hour_" ~ usageHour)|trans }}
                                                    </a>
                                                {% endfor %}
                                                {{ "remoteDesktop.index.auto_stop_change_last"|trans }}
                                            </p>
                                            <p class="dataissafeinfo">
                                                {{ "remoteDesktop.index.stop_data_safe_info"|trans }}
                                            </p>
                                        </div>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_STOPPING') %}
                                        <h3>
                                            <span class="label label-default label-pulsating remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.stopping"|trans }}</span>
                                        </h3>

                                        <hr>

                                        <div class="alert alert-info small" role="alert">
                                            <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.info_stopping"|trans }}
                                        </div>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_STOPPED') %}
                                        <h3>
                                            <span class="label label-default remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.stopped"|trans }}</span>
                                        </h3>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_TERMINATING') %}
                                        <h3>
                                            <span class="label label-default label-pulsating remotedesktopstatus">{{ "remoteDesktop.status.label"|trans }}&nbsp;{{ "remoteDesktop.status.terminating"|trans }}</span>
                                        </h3>
                                    {% endif %}

                                </div>


                                <div class="panel-footer">

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_NEVER_LAUNCHED') %}
                                        <a href="{{ path('cloudinstances.new', { 'remoteDesktop': remoteDesktop.id }) }}"
                                           class="btn btn-default remotedesktop-action-button">
                                            <span class="glyphicon glyphicon-play" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.launch_button"|trans }}
                                        </a>
                                    {% endif %}

                                    {%
                                        if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_BOOTING')
                                        or remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_STOPPING')
                                        or remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_TERMINATING')
                                    %}
                                        <a href="{{ path('remotedesktops.index') }}?{{ random() }}#{{ remoteDesktop.id }}" class="btn btn-default remotedesktop-action-button">
                                            <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.refresh_button"|trans }}
                                        </a>
                                    {% endif %}

                                    {% if remoteDesktop.status == constant('AppBundle\\Entity\\RemoteDesktop\\RemoteDesktop::STATUS_STOPPED') %}
                                        <a href="{{ path('remotedesktops.start', { 'remoteDesktop': remoteDesktop.id }) }}"
                                           class="btn btn-primary remotedesktop-action-button">
                                            <span class="glyphicon glyphicon-play" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.start_button"|trans }}
                                        </a>
                                        <a href="{{ path('remotedesktops.terminate', { 'remoteDesktop': remoteDesktop.id }) }}"
                                           class="btn btn-default remotedesktop-action-button">
                                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                            {{ "remoteDesktop.index.terminate_button"|trans }}
                                        </a>&nbsp;<span class="label label-default datainfolabel">{{ "remoteDesktop.index.terminate_data_lost_info"|trans }}</span>
                                    {% endif %}

                                </div>

                            </div>

                        {% endif %}

                    {% endfor %}

                {% else %}

                    <div class="alert alert-info" role="alert">
                        {{ "remoteDesktop.index.no_remote_desktops_yet"|trans }}
                    </div>

                {% endif %}

                <p>
                    <a href="{{ path('remotedesktops.new') }}" type="button" class="btn btn-default btn-lg">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        {{ "remoteDesktop.index.add_button"|trans }}
                    </a>
                </p>

                {% if not clientDownloadButtonsAlreadyShown %}
                    <hr>
                    <p>
                        <a href="{{ clientDownloadUriWin }}"
                           type="button"
                           class="btn btn-default btn-sm"
                        >
                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>
                            {{ "remoteDesktop.index.download_client_windows"|trans }}
                        </a>

                        <a href="{{ clientDownloadUriMac }}"
                           type="button"
                           class="btn btn-default btn-sm"
                        >
                            <span class="glyphicon glyphicon-apple" aria-hidden="true"></span>
                            {{ "remoteDesktop.index.download_client_mac"|trans }}
                        </a>
                    </p>
                {% endif %}

            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {# This adds a nice "breathing" effect to status labels of desktops that are in a transition state #}
    <script src="{{ asset('bundles/app/static-vendor/jquery.pulse.1.0.0.min.js') }}"></script>
    <script>
        var properties = {
            opacity: 0.25
        };
        var el = $('.label-pulsating');
        el.pulse(properties, { pulses : -1, duration: 4000, interval: 2000 });
    </script>

{% endblock %}
